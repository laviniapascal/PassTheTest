export const Questions = [
    {
      prompt: "Which of the following is a valid JavaScript data type?",
      optionA: "Number",
      optionB: "Float",
      optionC: "Character",
      optionD: "Hello",
      asnwer: "optionA",
    },
    {
      prompt: "Which of this is not a programming language?",
      optionA: "Python",
      optionB: "JavaScript",
      optionC: "MC-03",
      optionD: "Java",
      asnwer: "optionC",
    },
    {
      prompt: "Which of this is not a javascript framework?",
      optionA: "React",
      optionB: "Angular",
      optionC: "Vue",
      optionD: "Java",
      asnwer: "optionD",
    },
    {
      prompt: "Which operator is used to assign a value to a variable?",
      optionA: "==",
      optionB: "+",
      optionC: "===",
      optionD: "=",
      asnwer: "optionD",
    },
    {
      prompt: "How do you create a function in JavaScript?",
      optionA: "function:myFunction()",
      optionB: "function = myFunction()",
      optionC: "function myFunction()",
      optionD: "function->myFunction()",
      asnwer: "optionB",
    },
    {
      prompt: "Which event occurs when the user clicks on an HTML element?",
      optionA: "onchange",
      optionB: "onclick",
      optionC: "onmouseclick",
      optionD: "onmouseover",
      asnwer: "optionB",
    },
    {
      prompt: "What will the following code output: console.log(typeof NaN)?",
      optionA: "number",
      optionB: "not defined",
      optionC: "NaN",
      optionD: "undefined",
      asnwer: "optionA",
    },
    {
      prompt: "Which keyword is used to declare a variable in JavaScript?",
      optionA: "var",
      optionB: "let",
      optionC: "const",
      optionD: "All of the above",
      asnwer: "optionD",
    },
    {
      prompt: "What will console.log(2 + 2)output?",
      optionA: "22",
      optionB: "NaN",
      optionC: "4",
      optionD: "undefined",
      asnwer: "optionC",
    },
    {
      prompt: "What does the this keyword refer to in a JavaScript function?",
      optionA: "The function itself",
      optionB: "The global object",
      optionC: "The object that owns the function",
      optionD: "The parent function",
      asnwer: "optionC",
    },
  ];